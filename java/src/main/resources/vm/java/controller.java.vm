package ${packageName}.controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import ${packageName}.entity.${ClassName};
import ${packageName}.service.impl.${ClassName}ServiceImpl;
import com.highnes.attractinvestment.controller.BaseController;
import com.highnes.attractinvestment.domain.ResultMessage;
#if($table.crud)
import com.highnes.attractinvestment.common.page.TableDataInfo;
#elseif($table.tree)
import com.highnes.attractinvestment.common.utils.StringUtils;
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Controller
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller extends BaseController {
    private String prefix = "${moduleName}/${businessName}";

    @Autowired
    private ${ClassName}ServiceImpl ${className}Service;

    @GetMapping()
    public String ${businessName}() {
        return prefix + "/${businessName}";
    }

#if($table.crud)
    /**
     * 查询${functionName}列表
     */
    @PostMapping("/list")
    @ResponseBody
    public TableDataInfo list(${ClassName} ${className}) {
        startPage();
        List<${ClassName}> list = ${className}Service.findList(${className});
        return getDataTable(list);
    }
#elseif($table.tree)
    /**
     * 查询${functionName}树列表
     */
    @PostMapping("/list")
    @ResponseBody
    public List<${ClassName}> list(${ClassName} ${className}) {
        List<${ClassName}> list = ${className}Service.findList(${className});
        return list;
    }
#end

    /**
     * 导出${functionName}列表
     */
    @PostMapping("/export")
    @ResponseBody
    public AjaxResult export(${ClassName} ${className}) {
        List<${ClassName}> list = ${className}Service.findList(${className});
        ExcelUtil<${ClassName}> util = new ExcelUtil<${ClassName}>(${ClassName}.class);
        return util.exportExcel(list, "${businessName}");
    }

#if($table.crud)
    /**
     * 新增${functionName}
     */
    @GetMapping("/add")
    public String add() {
        return prefix + "/add";
    }
#elseif($table.tree)
    /**
     * 新增${functionName}
     */
    @GetMapping(value = { "/add/{${pkColumn.javaField}}", "/add/" })
    public String add(@PathVariable(value = "${pkColumn.javaField}", required = false) String ${pkColumn.javaField}, ModelMap mmap) {
        if (StringUtils.isNotNull(${pkColumn.javaField})) {
            mmap.put("${className}", ${className}Service.get(${pkColumn.javaField}));
        }
        return prefix + "/add";
    }
#end

    /**
     * 新增保存${functionName}
     */
    @PostMapping("/add")
    @ResponseBody
    public AjaxResult addSave(${ClassName} ${className}) {
        #if($table.tree)
if (${className} != null && StringUtils.isNotBlank(${className}.getParentId())){
            ${ClassName} parent = ${className}Service.get(${className}.getParentId());
            ${className}.setParentIds(parent.getParentIds()+","+parent.getId());
        }else{
            ${className}.setParentId("0");
            ${className}.setParentIds("0");
        }
        #end
return toAjax(${className}Service.save(${className}));
    }

    /**
     * 修改${functionName}
     */
    @GetMapping("/edit/{${pkColumn.javaField}}")
    public String edit(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}, ModelMap mmap) {
        ${ClassName} ${className} = ${className}Service.get(${pkColumn.javaField});
        mmap.put("${className}", ${className});
        return prefix + "/edit";
    }

    /**
     * 修改保存${functionName}
     */
    @PostMapping("/edit")
    @ResponseBody
    public AjaxResult editSave(${ClassName} ${className}) {
        #if($table.tree)
if (${className} != null && StringUtils.isNotBlank(${className}.getParentId())){
            ${ClassName} parent = ${className}Service.get(${className}.getParentId());
            ${className}.setParentIds(parent.getParentIds()+","+parent.getId());
        }else{
            ${className}.setParentId("0");
            ${className}.setParentIds("0");
        }
        #end
return toAjax(${className}Service.save(${className}));
    }

#if($table.crud)
    /**
     * 删除${functionName}
     */
    @PostMapping( "/remove")
    @ResponseBody
    public AjaxResult remove(String ids) {
        return toAjax(${className}Service.delete(ids));
    }
#elseif($table.tree)
    /**
     * 删除
     */
    @GetMapping("/remove/{${pkColumn.javaField}}")
    @ResponseBody
    public AjaxResult remove(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        return toAjax(${className}Service.delete(${pkColumn.javaField}));
    }
#end
}
